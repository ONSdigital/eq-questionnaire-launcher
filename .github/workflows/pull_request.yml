name: PR

on:
  pull_request:
    branches:
      - "master"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.16.x'
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      - name: Install dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: go get
      - name: Build
        run: CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo
  docker-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Tag
        run: echo "TAG=${{ github.event.pull_request.head.ref }}" > $GITHUB_ENV
      - name: Build
        run: >
          docker build -t onsdigital/eq-questionnaire-launcher:$TAG
          -t eu.gcr.io/${{ secrets.GCR_PROJECT_ID }}/eq-questionnaire-launcher:$TAG .
      - name: Push to Docker Hub
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          echo "Pushing with tag [$TAG]"
          docker push onsdigital/eq-questionnaire-launcher:$TAG
      - name: Push to GCR
        env:
          GCR_SERVICE_KEY: ${{ secrets.GCR_SERVICE_KEY }}
        run: |
          echo $GCR_SERVICE_KEY | docker login -u _json_key --password-stdin https://eu.gcr.io
          echo "Pushing with tag [$TAG]"
          docker push eu.gcr.io/${{ secrets.GCR_PROJECT_ID }}/eq-questionnaire-launcher:$TAG
